{"ast":null,"code":"var _jsxFileName = \"/home/d3nzel/development/code/phase-2/phase-2-code-challenge/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Overview from './components/Overview';\nimport GoalList from './components/GoalList';\nimport AddGoalForm from './components/AddGoalForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:3001/goals\";\nfunction App() {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const [isDark, setIsDark] = useState(false);\n  const toggleTheme = () => {\n    setIsDark(!isDark);\n    document.body.classList.toggle('dark');\n  };\n  useEffect(() => {\n    fetch(API_URL).then(res => res.json()).then(data => setGoals(data)).catch(err => console.error('Error loading goals:', err));\n  }, []);\n  const handleAddGoal = newGoal => {\n    const goalWithId = {\n      ...newGoal,\n      id: Date.now()\n    };\n    setGoals([...goals, goalWithId]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"theme-toggle\",\n      onClick: toggleTheme,\n      children: isDark ? '‚òÄÔ∏è Light' : 'üåô Dark'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SMART Goal Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overview, {\n      goals: goals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddGoalForm, {\n      onAdd: handleAddGoal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoalList, {\n      goals: goals,\n      setGoals: setGoals\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dFjkONArCOUJT04GcrcHtdFQ2Ns=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Overview","GoalList","AddGoalForm","jsxDEV","_jsxDEV","API_URL","App","_s","goals","setGoals","isDark","setIsDark","toggleTheme","document","body","classList","toggle","fetch","then","res","json","data","catch","err","console","error","handleAddGoal","newGoal","goalWithId","id","Date","now","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","_c","$RefreshReg$"],"sources":["/home/d3nzel/development/code/phase-2/phase-2-code-challenge/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Overview from './components/Overview';\nimport GoalList from './components/GoalList';\nimport AddGoalForm from './components/AddGoalForm';\n\nconst API_URL = \"http://localhost:3001/goals\";\n\nfunction App() {\n  const [goals, setGoals] = useState([]);\n  const [isDark, setIsDark] = useState(false);\n\n  const toggleTheme = () => {\n    setIsDark(!isDark);\n    document.body.classList.toggle('dark');\n  };\n\n  useEffect(() => {\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(data => setGoals(data))\n      .catch(err => console.error('Error loading goals:', err));\n  }, []);\n\n  const handleAddGoal = (newGoal) => {\n    const goalWithId = { ...newGoal, id: Date.now() };\n    setGoals([...goals, goalWithId]);\n  };\n\n  return (\n    <div className=\"app\">\n      <button className=\"theme-toggle\" onClick={toggleTheme}>\n        {isDark ? '‚òÄÔ∏è Light' : 'üåô Dark'}\n      </button>\n      \n      <h1>SMART Goal Planner</h1>\n      <Overview goals={goals} />\n      <AddGoalForm onAdd={handleAddGoal} />\n      <GoalList goals={goals} setGoals={setGoals} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAG,6BAA6B;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBD,SAAS,CAAC,CAACD,MAAM,CAAC;IAClBG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC;EACxC,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACdkB,KAAK,CAACZ,OAAO,CAAC,CACXa,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIZ,QAAQ,CAACY,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC,CAAC;EAC7D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAIC,OAAO,IAAK;IACjC,MAAMC,UAAU,GAAG;MAAE,GAAGD,OAAO;MAAEE,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC;IACjDtB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEoB,UAAU,CAAC,CAAC;EAClC,CAAC;EAED,oBACExB,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA;MAAQ4B,SAAS,EAAC,cAAc;MAACE,OAAO,EAAEtB,WAAY;MAAAqB,QAAA,EACnDvB,MAAM,GAAG,UAAU,GAAG;IAAS;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAETlC,OAAA;MAAA6B,QAAA,EAAI;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlC,OAAA,CAACJ,QAAQ;MAACQ,KAAK,EAAEA;IAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1BlC,OAAA,CAACF,WAAW;MAACqC,KAAK,EAAEb;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrClC,OAAA,CAACH,QAAQ;MAACO,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAAC/B,EAAA,CAjCQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}